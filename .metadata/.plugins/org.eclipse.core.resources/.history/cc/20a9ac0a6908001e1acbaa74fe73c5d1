package com.StudentAndStaff.service;

import java.text.Collator;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.StudentAndStaff.modal.Student;

@Service
public class StudentService {
	
	List<Student> student1 = new LinkedList();

    public List<Student> save(List<Student>  student)
    {
    	student1.addAll(student);
        return student1;
    }

    //1) Retrieve Student details in year 1 
    public List<Student> getStudentsOfYear1()
    {
    	List<Student> student2 = student1.stream().filter(s->s.getCurrentYear().equals("year 1"))
    												.collect(Collectors.toList());
        return student2;
    }
    
	//2) Retrieve Students who is present today in year 1 and branch CSE
    public List<Student> getStudentsOfYear1WhoPresentTodayInCSEBranch()
    {
    	LocalDate today = LocalDate.now();
    	List<Student> student3 =student1.stream().
    							filter(st->st.getCurrentYear().equals("year 1") &&
    										st.getStudentbranch().equalsIgnoreCase("CSE") && 
    										st.getStudentYearlyAttendance().get("year 1").stream().
    							anyMatch(m->m.studentAttendanceDate().equals(today) &&
    									m.studentAttendancestatus().equals("Present"))).
    							collect(Collectors.toList());
    			
        			return student3;
    }

    public List<Student> getStudentsWhoAreNotPassesdInYear1()
    {
    	
    	List<Student> student4 = student1.stream()
    							.filter(fs->!fs.getCurrentYear().equalsIgnoreCase("year 1") &&
    										fs.getYearWiseStudentSubjectsAndMarksAndResult().get("year 1")
    							.stream().anyMatch(a->a.result().contains("Fail")))
    							.collect(Collectors.toList());
        return student4;
    }

}
